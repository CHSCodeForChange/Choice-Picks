[{"C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\index.js":"1","C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\reportWebVitals.js":"2","C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\nominations.js":"3","C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\choicePicks.js":"4","C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\recommendations.js":"5","C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\contacts.js":"6","C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\librarian.js":"7","C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\footer.js":"8","C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\book.js":"9","C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\clickableView.js":"10"},{"size":1251,"mtime":1616515016538,"results":"11","hashOfConfig":"12"},{"size":413,"mtime":1616515016539,"results":"13","hashOfConfig":"12"},{"size":3631,"mtime":1616515016534,"results":"14","hashOfConfig":"12"},{"size":1477,"mtime":1616515016527,"results":"15","hashOfConfig":"12"},{"size":8196,"mtime":1616515016535,"results":"16","hashOfConfig":"12"},{"size":5210,"mtime":1616515016529,"results":"17","hashOfConfig":"12"},{"size":16576,"mtime":1616516276967,"results":"18","hashOfConfig":"12"},{"size":1238,"mtime":1616515016532,"results":"19","hashOfConfig":"12"},{"size":416,"mtime":1616515016526,"results":"20","hashOfConfig":"12"},{"size":1929,"mtime":1616515016528,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"15ip6n3",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\index.js",[],["47","48"],"C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\reportWebVitals.js",[],"C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\nominations.js",["49","50","51"],"import React, {Component} from 'react';\r\nimport Book from './book';\r\nimport ClickableView from './clickableView';\r\nimport '../index.css';\r\n\r\nclass Nominations extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            listOfBooks: [\r\n                {name: \"Dairy of a Wimpy Kid\", path: \"https://prodimage.images-bn.com/pimages/9781419741869_p0_v1_s550x406.jpg\", nominated: true},\r\n                {name: \"Scythe\", path: \"https://images-na.ssl-images-amazon.com/images/I/61dMoTN7t1L.jpg\", nominated: true},\r\n                {name: \"Harry Potter\", path: \"https://images-na.ssl-images-amazon.com/images/I/81iqZ2HHD-L.jpg\", nominated: false},\r\n                {name: \"How to Code\", path: \"https://images-na.ssl-images-amazon.com/images/I/81mT0cKE0oL.jpg\", nominated: false},\r\n                {name: \"Hunger Games\", path: \"https://images-na.ssl-images-amazon.com/images/I/61JfGcL2ljL.jpg\", nominated: true},\r\n            ],\r\n            currentBook: null,\r\n            showMoreInfo: false,\r\n            numOfBooks: 4,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let modalContent = null;\r\n        if (this.state.showMoreInfo) {\r\n            if (this.state.currentBook != null) {\r\n                modalContent = (<ClickableView book = {this.state.currentBook}/>);\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <div className = \"mainbar\">\r\n                    {this.renderBooks()}\r\n                </div>\r\n                <div onClick = {(e) => this.close(e)} id = \"moreInfoBox1\" className = \"modal\">\r\n                    {modalContent}\r\n                </div>\r\n                <button id = \"loadMoreBooks1\" onClick = {(e) => this.moreBooks(e)}>Load More Books</button>\r\n            </div>\r\n        )\r\n    } \r\n\r\n    renderBooks() {\r\n        let numOfOpenSpaces = 0;\r\n        return (\r\n            <div>\r\n                {this.state.listOfBooks.slice(0, this.state.numOfBooks).map((book) => {\r\n                    if (book.nominated) {\r\n                        numOfOpenSpaces++;\r\n                    }\r\n                })}\r\n\r\n                {this.state.listOfBooks.slice(0, (this.state.numOfBooks + numOfOpenSpaces)).map((book, index) => {\r\n                    if (!book.nominated) {\r\n                        return (\r\n                            <div className = \"bookOutline\" key = {index}>\r\n                                <Book name = {book.name} path = {book.path}/>\r\n                                <button id=\"moreInfoBtn\" onClick = {() => this.moreInfo(book)}>More Information</button>\r\n                                <br />\r\n                            </div>\r\n                        );\r\n                    }\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    moreInfo(book) {\r\n        document.getElementById(\"moreInfoBox1\").style.display = \"block\";\r\n        this.setState({currentBook: book});\r\n        this.setState({showMoreInfo: true});\r\n    }\r\n    \r\n    moreBooks(event) {\r\n        event.preventDefault();\r\n        let newNumOfBooks = this.state.numOfBooks + 8;\r\n        if (newNumOfBooks >= this.state.listOfBooks.length) {\r\n            newNumOfBooks = this.state.listOfBooks.length;\r\n            document.getElementById('loadMoreBooks1').style.display = 'none';\r\n            alert(\"That is all the available books!\");\r\n        }\r\n        this.setState({numOfBooks: newNumOfBooks});\r\n    }\r\n\r\n    close(event) {\r\n        event.preventDefault();\r\n        if (event.target.id == \"moreInfoBox1\") {\r\n            document.getElementById(\"moreInfoBox1\").style.display = \"none\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Nominations;","C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\choicePicks.js",[],"C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\recommendations.js",["52","53","54"],"import React, {Component} from 'react';\r\nimport Book from './book';\r\nimport ClickableView from './clickableView';\r\nimport Collapsible from 'react-collapsible';\r\nimport '../index.css';\r\n\r\nclass Recommendations extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            listOfBooks: [\r\n                {name: \"Dairy of a Wimpy Kid\", path: \"https://prodimage.images-bn.com/pimages/9781419741869_p0_v1_s550x406.jpg\", nominated: true},\r\n                {name: \"Scythe\", path: \"https://images-na.ssl-images-amazon.com/images/I/61dMoTN7t1L.jpg\", nominated: true},\r\n                {name: \"Harry Potter\", path: \"https://images-na.ssl-images-amazon.com/images/I/81iqZ2HHD-L.jpg\", nominated: false},\r\n                {name: \"How to Code\", path: \"https://images-na.ssl-images-amazon.com/images/I/81mT0cKE0oL.jpg\", nominated: false},\r\n                {name: \"Hunger Games\", path: \"https://images-na.ssl-images-amazon.com/images/I/61JfGcL2ljL.jpg\", nominated: true},\r\n            ],\r\n            currentBook: null,\r\n            showMoreInfo: false,\r\n            numOfBooks: 4,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let modalContent = null;\r\n        if (this.state.showMoreInfo) {\r\n            if (this.state.currentBook != null) {\r\n                modalContent = (<ClickableView book = {this.state.currentBook}/>);\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <div className = \"sidenav\">\r\n                    {this.filter()}\r\n                </div>\r\n                <div className = \"mainbar\">\r\n                    {this.renderBooks()}\r\n                </div>\r\n                <div onClick = {(e) => this.close(e)} id = \"moreInfoBox\" className = \"modal\">\r\n                    {modalContent}\r\n                </div>\r\n                <button id = \"loadMoreBooks\" onClick = {(e) => this.moreBooks(e)}>Load More Books</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    filter() {\r\n        const collapsibleTrigger = (\r\n            <div>\r\n                <h2 className = \"filter\">Filter</h2>\r\n                <br/>\r\n                <a id = \"downBtn\" href= \"#nav\"><div class=\"openFilter\"></div></a>\r\n            </div>\r\n        );\r\n        const closeCollapsibleTrigger = (\r\n            <div>\r\n                <h2 className = \"filter\">Filter</h2>\r\n                <br/>\r\n                <a id = \"downBtn\" href= \"#nav\"><div class=\"closeFilter\"></div></a>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className = \"recInput\">\r\n                <Collapsible trigger = {collapsibleTrigger} className = \"filter\" transitionTime = \"200\" triggerWhenOpen = {closeCollapsibleTrigger}>\r\n                    <div className = \"filterContent\">\r\n                        <ol>\r\n                            <div className = \"filterCol1\"> \r\n                                <li>Genre:</li>\r\n                                <form>\r\n                                    <input type=\"checkbox\" className = \"input2\" id=\"action\" name=\"genre\"/>\r\n                                    <label for=\"action\">Action</label><br />\r\n                                    <input type=\"checkbox\" className = \"input2\" id=\"adventure\" name=\"genre\"/>\r\n                                    <label for=\"adventure\">Adventure</label><br />\r\n                                    <input type=\"checkbox\" className = \"input2\" id=\"comedy\" name=\"genre\"/>\r\n                                    <label for=\"comedy\">Comedy</label><br />\r\n                                    <input type=\"checkbox\" className = \"input2\" id=\"mystery\" name=\"genre\"/>\r\n                                    <label for=\"mystery\">Mystery</label><br />\r\n                                    <input type=\"checkbox\" className = \"input2\" id=\"fantasy\" name=\"genre\"/>\r\n                                    <label for=\"fantasy\">Fantasy</label><br />\r\n                                    <input type=\"checkbox\" className = \"input2\" id=\"horror\" name=\"genre\"/>\r\n                                    <label for=\"horror\">Horror</label><br />\r\n                                    <input type=\"checkbox\" className = \"input2\" id=\"scifi\" name=\"genre\"/>\r\n                                    <label for=\"scifi\">Sci-Fi</label><br />\r\n                                    <input type=\"checkbox\" className = \"input2\" id=\"thriller\" name=\"genre\"/>\r\n                                    <label for=\"thriller\">Thriller</label><br />\r\n                                    <input type=\"checkbox\" className = \"input2\" id=\"romance\" name=\"genre\"/>\r\n                                    <label for=\"romance\">Romance</label><br />\r\n                                </form> \r\n                            </div>\r\n                            <div className = \"filterCol2\">\r\n                            <li>Realism</li>\r\n                                <form>\r\n                                    <input type=\"radio\" className = \"input2\" id=\"fiction\" name=\"realism\"/>\r\n                                    <label for=\"fiction\">Fiction</label><br />\r\n                                    <input type=\"radio\" className = \"input2\" id=\"nonFiction\" name=\"realism\"/>\r\n                                    <label for=\"nonFiction\">Non-Fiction</label><br />\r\n                                </form>\r\n                                <li>Readability</li>\r\n                                <form>\r\n                                    <input type=\"radio\" className = \"input2\" id=\"easy\" name=\"Readability\"/>\r\n                                    <label for=\"easy\">Quick/Easy Read</label><br />\r\n                                    <input type=\"radio\" className = \"input2\" id=\"medium\" name=\"Readability\"/>\r\n                                    <label for=\"medium\">Medium Read</label><br />\r\n                                    <input type=\"radio\" className = \"input2\" id=\"hard\" name=\"Readability\"/>\r\n                                    <label for=\"hard\">Long/Difficult Read</label><br />\r\n                                </form>\r\n                            </div>\r\n                        </ol>\r\n                        <button className = \"button3\" onClick = {(e) => this.filterBooks(e)}>Apply Filter</button>\r\n                    </div>\r\n                </Collapsible>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    filterBooks(event) {\r\n        event.preventDefault();\r\n        alert(\"worked\");\r\n    } \r\n\r\n    renderBooks() {\r\n        let numOfOpenSpaces = 0;\r\n        return (\r\n            <div>\r\n                {this.state.listOfBooks.slice(0, this.state.numOfBooks).map((book) => {\r\n                    if (!book.nominated) {\r\n                        numOfOpenSpaces++;\r\n                    }\r\n                })}\r\n\r\n                {this.state.listOfBooks.slice(0, (this.state.numOfBooks + numOfOpenSpaces)).map((book, index) => {\r\n                    if (book.nominated) {\r\n                        return (\r\n                            <div className = \"bookOutline\" key = {index}>\r\n                                <Book name = {book.name} path = {book.path}/>\r\n                                <button id=\"moreInfoBtn\" onClick = {() => this.moreInfo(book)}>More Information</button>\r\n                                <br />\r\n                            </div>\r\n                        );\r\n                    }\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    moreInfo(book) {\r\n        document.getElementById(\"moreInfoBox\").style.display = \"block\";\r\n        this.setState({currentBook: book});\r\n        this.setState({showMoreInfo: true});\r\n    }\r\n    \r\n    moreBooks(event) {\r\n        event.preventDefault();\r\n        let newNumOfBooks = this.state.numOfBooks + 8;\r\n        if (newNumOfBooks >= this.state.listOfBooks.length) {\r\n            newNumOfBooks = this.state.listOfBooks.length;\r\n            document.getElementById('loadMoreBooks').style.display = 'none';\r\n            alert(\"That is all the available books!\");\r\n        }\r\n        this.setState({numOfBooks: newNumOfBooks});\r\n    }\r\n\r\n    close(event) {\r\n        event.preventDefault();\r\n        if (event.target.id == \"moreInfoBox\") {\r\n            document.getElementById(\"moreInfoBox\").style.display = \"none\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Recommendations;","C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\contacts.js",["55"],"import React, {Component} from 'react';\r\nimport '../index.css';\r\nimport emailjs from 'emailjs-com';\r\n\r\nclass Contacts extends Component {\r\n    render () {\r\n        return (\r\n            <div className=\"container\"> \r\n                <section className=\"main-section alabaster\" id=\"contact\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\" id = \"contactInfo\">\r\n                            <div className=\"contact-info-box\">\r\n                                <h3><i class=\"fa fa-map-marker\"></i>Address:</h3>\r\n                                <span><a target=\"__blank\" href = \"https://www.google.com/maps/place/2140+E+116th+St,+Carmel,+IN+46032/@39.9585644,-86.1199571,17z/data=!3m1!4b1!4m5!3m4!1s0x8814ada097472ab5:0x9f4fc8c69992733e!8m2!3d39.9585603!4d-86.1177631\" >2140 E 116th St, Carmel, IN 46032</a></span>\r\n                            </div>\r\n                            <div className=\"contact-info-box\">\r\n                                <h3><i className=\"fa fa-phone\"></i>Phone:</h3>\r\n                                <span><a href = \"tel: 5554280940\">(317) 814-3900</a></span>\r\n                            </div>\r\n                            <div className=\"contact-info-box\">\r\n                                <h3><i className=\"fa fa-pencil\"></i>E-mail:</h3>\r\n                                <span><a target=\"__blank\" href=\"mailto:jbeckman@carmelclaylibrary.org\">jbeckman@carmelclaylibrary.org</a></span>\r\n                            </div>\r\n                            <div className=\"contact-info-box\">\r\n                                <h3><i class=\"fab fa-facebook\"></i>Facebook:</h3>\r\n                                <a target=\"__blank\" href=\"https://www.facebook.com/carmellib/\">Click Here</a>\r\n                            </div>\r\n                            <div className=\"contact-info-box\">\r\n                                <h3><i class=\"fab fa-instagram\"></i>Instagram:</h3>\r\n                                <a target=\"__blank\"  href=\"https://www.instagram.com/carmel_library/?hl=en\">Click Here</a>\r\n                            </div>\r\n                            <div className=\"contact-info-box\">\r\n                                <h3><i class=\"fab fa-twitter\"></i>Twitter:</h3>\r\n                                <a target=\"__blank\"  href=\"https://www.instagram.com/carmel_library/?hl=en\">Click Here</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-sm-5 wow fadeInUp delay-05s\" id = \"contactBox\">\r\n                            <div className=\"form\">\r\n                                <div id=\"sendmessage\">Your message has been sent. Thank you!</div>\r\n                                <div id=\"errormessage\"></div>\r\n                                <form onSubmit = {this.handleSubmit} action=\"\" method=\"post\" role=\"form\" className=\"contactForm\">\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" name=\"name\" className=\"form-control input-text\" id=\"name\" placeholder=\"Your Name\" data-rule=\"minlen:4\" data-msg=\"Please enter at least 4 chars\" />\r\n                                        <div className=\"validation\"></div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"email\" className=\"form-control input-text\" name=\"email\" id=\"email\" placeholder=\"Your Email\" data-rule=\"email\" data-msg=\"Please enter a valid email\" />\r\n                                        <div className=\"validation\"></div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className=\"form-control input-text\" name=\"subject\" id=\"subject\" placeholder=\"Subject\" data-rule=\"minlen:4\" data-msg=\"Please enter at least 8 chars of subject\" />\r\n                                        <div className=\"validation\"></div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea className=\"form-control input-text text-area\" name=\"message\" rows=\"5\" data-rule=\"required\" data-msg=\"Please write something for us\" placeholder=\"Message\"></textarea>\r\n                                        <div className=\"validation\"></div>\r\n                                    </div>\r\n                                    <div className=\"text-center\"><button type=\"submit\" class=\"input-btn\">Send Message</button></div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        emailjs.sendForm('service_1qmh2dc', 'template_yznagmp', e.target, 'user_o6t4c09ESEWOJ3hZSDIcV')\r\n        .then((result) => {\r\n            alert(\"Message Sent\");\r\n            e.target.reset();\r\n        }, (error) => {\r\n            alert(\"There was an error. Please try again later!\");\r\n        });\r\n    }\r\n}\r\n\r\nexport default Contacts;","C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\librarian.js",["56","57"],"C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\footer.js",[],"C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\book.js",[],"C:\\Users\\SAR\\Desktop\\Choice Picks Clone Project Folder\\Choice-Picks\\client\\src\\base\\clickableView.js",["58","59"],"import React, {Component} from 'react';\r\nimport '../index.css';\r\n\r\nclass ClickableView extends Component {\r\n    render() {\r\n        if (this.props.book.nominated) {\r\n            return (\r\n                <div className = \"modal-content\">\r\n                    <span onClick = {(e) => this.close(e)} className = \"close\">&times;</span>\r\n                    <div id = \"picture\" className = \"col1\">\r\n                        <img src = {this.props.book.path} width = \"350vh\" height = \"500vh\" alt = \"Unable to Load Picture\"/>\r\n                    </div>\r\n                    <div id = \"content\" className = \"col2\">\r\n                        <h2><u>{this.props.book.name}</u></h2>\r\n                        <p>info abt books go here</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className = \"modal-content\">\r\n                    <span onClick = {(e) => this.close(e)} className = \"close\">&times;</span>\r\n                    <div id = \"picture\" className = \"col1\">\r\n                        <img src = {this.props.book.path} width = \"350vh\" height = \"500vh\" alt = \"Unable to Load Picture\"/>\r\n                    </div>\r\n                    <div id = \"content\" className = \"col2\">\r\n                        <h2><u>{this.props.book.name}</u></h2>\r\n                        <p>not nominated</p>\r\n                        <form>\r\n                            <input type = \"text\" placeholder = \"Name (First Last)\" />\r\n                        </form>\r\n                        <button className = \"button4\">Nominate!</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    close(event) {\r\n        event.preventDefault();\r\n        document.getElementById(\"moreInfoBox\").style.display = \"none\";\r\n        document.getElementById(\"moreInfoBox1\").style.display = \"none\";\r\n    }\r\n}\r\n\r\nexport default ClickableView;",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":47,"column":84,"nodeType":"66","messageId":"67","endLine":47,"endColumn":86},{"ruleId":"64","severity":1,"message":"68","line":53,"column":111,"nodeType":"66","messageId":"69","endLine":53,"endColumn":113},{"ruleId":"70","severity":1,"message":"71","line":87,"column":29,"nodeType":"72","messageId":"73","endLine":87,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":125,"column":84,"nodeType":"66","messageId":"67","endLine":125,"endColumn":86},{"ruleId":"64","severity":1,"message":"68","line":131,"column":111,"nodeType":"66","messageId":"69","endLine":131,"endColumn":113},{"ruleId":"70","severity":1,"message":"71","line":165,"column":29,"nodeType":"72","messageId":"73","endLine":165,"endColumn":31},{"ruleId":"74","severity":1,"message":"75","line":41,"column":33,"nodeType":"76","endLine":41,"endColumn":130},{"ruleId":"77","severity":1,"message":"78","line":60,"column":47,"nodeType":"76","endLine":60,"endColumn":100},{"ruleId":"79","severity":1,"message":"80","line":320,"column":25,"nodeType":"81","messageId":"82","endLine":320,"endColumn":32},{"ruleId":"83","severity":1,"message":"84","line":11,"column":25,"nodeType":"76","endLine":11,"endColumn":124},{"ruleId":"83","severity":1,"message":"84","line":25,"column":25,"nodeType":"76","endLine":25,"endColumn":124},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'newLine' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]