[{"/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/index.js":"1","/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/reportWebVitals.js":"2","/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/choicePicks.js":"3","/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/recommendations.js":"4","/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/footer.js":"5","/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/nominations.js":"6","/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/contacts.js":"7","/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/librarian.js":"8","/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/book.js":"9","/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/clickableView.js":"10"},{"size":1194,"mtime":1618956361715,"results":"11","hashOfConfig":"12"},{"size":398,"mtime":1618956361715,"results":"13","hashOfConfig":"12"},{"size":1862,"mtime":1618956963069,"results":"14","hashOfConfig":"12"},{"size":8026,"mtime":1618956361714,"results":"15","hashOfConfig":"12"},{"size":1206,"mtime":1618956361714,"results":"16","hashOfConfig":"12"},{"size":3531,"mtime":1618956361714,"results":"17","hashOfConfig":"12"},{"size":5132,"mtime":1618956361714,"results":"18","hashOfConfig":"12"},{"size":21218,"mtime":1618956361714,"results":"19","hashOfConfig":"12"},{"size":401,"mtime":1618956361713,"results":"20","hashOfConfig":"12"},{"size":1883,"mtime":1618956361713,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17tpfgx",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},"/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/index.js",[],"/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/reportWebVitals.js",[],"/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/choicePicks.js",["48","49"],"/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/recommendations.js",["50","51","52"],"import React, {Component} from 'react';\nimport Book from './book';\nimport ClickableView from './clickableView';\nimport Collapsible from 'react-collapsible';\nimport '../index.css';\n\nclass Recommendations extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            listOfBooks: [\n                {name: \"Dairy of a Wimpy Kid\", path: \"https://prodimage.images-bn.com/pimages/9781419741869_p0_v1_s550x406.jpg\", nominated: true},\n                {name: \"Scythe\", path: \"https://images-na.ssl-images-amazon.com/images/I/61dMoTN7t1L.jpg\", nominated: true},\n                {name: \"Harry Potter\", path: \"https://images-na.ssl-images-amazon.com/images/I/81iqZ2HHD-L.jpg\", nominated: false},\n                {name: \"How to Code\", path: \"https://images-na.ssl-images-amazon.com/images/I/81mT0cKE0oL.jpg\", nominated: false},\n                {name: \"Hunger Games\", path: \"https://images-na.ssl-images-amazon.com/images/I/61JfGcL2ljL.jpg\", nominated: true},\n            ],\n            currentBook: null,\n            showMoreInfo: false,\n            numOfBooks: 4,\n        }\n    }\n\n    render() {\n        let modalContent = null;\n        if (this.state.showMoreInfo) {\n            if (this.state.currentBook != null) {\n                modalContent = (<ClickableView book = {this.state.currentBook}/>);\n            }\n        }\n        return (\n            <div>\n                <div className = \"sidenav\">\n                    {this.filter()}\n                </div>\n                <div className = \"mainbar\">\n                    {this.renderBooks()}\n                </div>\n                <div onClick = {(e) => this.close(e)} id = \"moreInfoBox\" className = \"modal\">\n                    {modalContent}\n                </div>\n                <button id = \"loadMoreBooks\" onClick = {(e) => this.moreBooks(e)}>Load More Books</button>\n            </div>\n        )\n    }\n\n    filter() {\n        const collapsibleTrigger = (\n            <div>\n                <h2 className = \"filter\">Filter</h2>\n                <br/>\n                <a id = \"downBtn\" href= \"#nav\"><div class=\"openFilter\"></div></a>\n            </div>\n        );\n        const closeCollapsibleTrigger = (\n            <div>\n                <h2 className = \"filter\">Filter</h2>\n                <br/>\n                <a id = \"downBtn\" href= \"#nav\"><div class=\"closeFilter\"></div></a>\n            </div>\n        );\n        return (\n            <div className = \"recInput\">\n                <Collapsible trigger = {collapsibleTrigger} className = \"filter\" transitionTime = \"200\" triggerWhenOpen = {closeCollapsibleTrigger}>\n                    <div className = \"filterContent\">\n                        <ol>\n                            <div className = \"filterCol1\"> \n                                <li>Genre:</li>\n                                <form>\n                                    <input type=\"checkbox\" className = \"input2\" id=\"action\" name=\"genre\"/>\n                                    <label for=\"action\">Action</label><br />\n                                    <input type=\"checkbox\" className = \"input2\" id=\"adventure\" name=\"genre\"/>\n                                    <label for=\"adventure\">Adventure</label><br />\n                                    <input type=\"checkbox\" className = \"input2\" id=\"comedy\" name=\"genre\"/>\n                                    <label for=\"comedy\">Comedy</label><br />\n                                    <input type=\"checkbox\" className = \"input2\" id=\"mystery\" name=\"genre\"/>\n                                    <label for=\"mystery\">Mystery</label><br />\n                                    <input type=\"checkbox\" className = \"input2\" id=\"fantasy\" name=\"genre\"/>\n                                    <label for=\"fantasy\">Fantasy</label><br />\n                                    <input type=\"checkbox\" className = \"input2\" id=\"horror\" name=\"genre\"/>\n                                    <label for=\"horror\">Horror</label><br />\n                                    <input type=\"checkbox\" className = \"input2\" id=\"scifi\" name=\"genre\"/>\n                                    <label for=\"scifi\">Sci-Fi</label><br />\n                                    <input type=\"checkbox\" className = \"input2\" id=\"thriller\" name=\"genre\"/>\n                                    <label for=\"thriller\">Thriller</label><br />\n                                    <input type=\"checkbox\" className = \"input2\" id=\"romance\" name=\"genre\"/>\n                                    <label for=\"romance\">Romance</label><br />\n                                </form> \n                            </div>\n                            <div className = \"filterCol2\">\n                            <li>Realism</li>\n                                <form>\n                                    <input type=\"radio\" className = \"input2\" id=\"fiction\" name=\"realism\"/>\n                                    <label for=\"fiction\">Fiction</label><br />\n                                    <input type=\"radio\" className = \"input2\" id=\"nonFiction\" name=\"realism\"/>\n                                    <label for=\"nonFiction\">Non-Fiction</label><br />\n                                </form>\n                                <li>Readability</li>\n                                <form>\n                                    <input type=\"radio\" className = \"input2\" id=\"easy\" name=\"Readability\"/>\n                                    <label for=\"easy\">Quick/Easy Read</label><br />\n                                    <input type=\"radio\" className = \"input2\" id=\"medium\" name=\"Readability\"/>\n                                    <label for=\"medium\">Medium Read</label><br />\n                                    <input type=\"radio\" className = \"input2\" id=\"hard\" name=\"Readability\"/>\n                                    <label for=\"hard\">Long/Difficult Read</label><br />\n                                </form>\n                            </div>\n                        </ol>\n                        <button className = \"button3\" onClick = {(e) => this.filterBooks(e)}>Apply Filter</button>\n                    </div>\n                </Collapsible>\n            </div>\n        );\n    }\n\n    filterBooks(event) {\n        event.preventDefault();\n        alert(\"worked\");\n    } \n\n    renderBooks() {\n        let numOfOpenSpaces = 0;\n        return (\n            <div>\n                {this.state.listOfBooks.slice(0, this.state.numOfBooks).map((book) => {\n                    if (!book.nominated) {\n                        numOfOpenSpaces++;\n                    }\n                })}\n\n                {this.state.listOfBooks.slice(0, (this.state.numOfBooks + numOfOpenSpaces)).map((book, index) => {\n                    if (book.nominated) {\n                        return (\n                            <div className = \"bookOutline\" key = {index}>\n                                <Book name = {book.name} path = {book.path}/>\n                                <button id=\"moreInfoBtn\" onClick = {() => this.moreInfo(book)}>More Information</button>\n                                <br />\n                            </div>\n                        );\n                    }\n                })}\n            </div>\n        )\n    }\n\n    moreInfo(book) {\n        document.getElementById(\"moreInfoBox\").style.display = \"block\";\n        this.setState({currentBook: book});\n        this.setState({showMoreInfo: true});\n    }\n    \n    moreBooks(event) {\n        event.preventDefault();\n        let newNumOfBooks = this.state.numOfBooks + 8;\n        if (newNumOfBooks >= this.state.listOfBooks.length) {\n            newNumOfBooks = this.state.listOfBooks.length;\n            document.getElementById('loadMoreBooks').style.display = 'none';\n            alert(\"That is all the available books!\");\n        }\n        this.setState({numOfBooks: newNumOfBooks});\n    }\n\n    close(event) {\n        event.preventDefault();\n        if (event.target.id == \"moreInfoBox\") {\n            document.getElementById(\"moreInfoBox\").style.display = \"none\";\n        }\n    }\n}\n\nexport default Recommendations;",["53","54"],"/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/footer.js",[],"/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/nominations.js",["55","56","57"],"import React, {Component} from 'react';\nimport Book from './book';\nimport ClickableView from './clickableView';\nimport '../index.css';\n\nclass Nominations extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            listOfBooks: [\n                {name: \"Dairy of a Wimpy Kid\", path: \"https://prodimage.images-bn.com/pimages/9781419741869_p0_v1_s550x406.jpg\", nominated: true},\n                {name: \"Scythe\", path: \"https://images-na.ssl-images-amazon.com/images/I/61dMoTN7t1L.jpg\", nominated: true},\n                {name: \"Harry Potter\", path: \"https://images-na.ssl-images-amazon.com/images/I/81iqZ2HHD-L.jpg\", nominated: false},\n                {name: \"How to Code\", path: \"https://images-na.ssl-images-amazon.com/images/I/81mT0cKE0oL.jpg\", nominated: false},\n                {name: \"Hunger Games\", path: \"https://images-na.ssl-images-amazon.com/images/I/61JfGcL2ljL.jpg\", nominated: true},\n            ],\n            currentBook: null,\n            showMoreInfo: false,\n            numOfBooks: 4,\n        }\n    }\n\n    render() {\n        let modalContent = null;\n        if (this.state.showMoreInfo) {\n            if (this.state.currentBook != null) {\n                modalContent = (<ClickableView book = {this.state.currentBook}/>);\n            }\n        }\n        return (\n            <div>\n                <div className = \"mainbar\">\n                    {this.renderBooks()}\n                </div>\n                <div onClick = {(e) => this.close(e)} id = \"moreInfoBox1\" className = \"modal\">\n                    {modalContent}\n                </div>\n                <button id = \"loadMoreBooks1\" onClick = {(e) => this.moreBooks(e)}>Load More Books</button>\n            </div>\n        )\n    } \n\n    renderBooks() {\n        let numOfOpenSpaces = 0;\n        return (\n            <div>\n                {this.state.listOfBooks.slice(0, this.state.numOfBooks).map((book) => {\n                    if (book.nominated) {\n                        numOfOpenSpaces++;\n                    }\n                })}\n\n                {this.state.listOfBooks.slice(0, (this.state.numOfBooks + numOfOpenSpaces)).map((book, index) => {\n                    if (!book.nominated) {\n                        return (\n                            <div className = \"bookOutline\" key = {index}>\n                                <Book name = {book.name} path = {book.path}/>\n                                <button id=\"moreInfoBtn\" onClick = {() => this.moreInfo(book)}>Nominate</button>\n                                <br />\n                            </div>\n                        );\n                    }\n                })}\n            </div>\n        )\n    }\n\n    moreInfo(book) {\n        document.getElementById(\"moreInfoBox1\").style.display = \"block\";\n        this.setState({currentBook: book});\n        this.setState({showMoreInfo: true});\n    }\n    \n    moreBooks(event) {\n        event.preventDefault();\n        let newNumOfBooks = this.state.numOfBooks + 8;\n        if (newNumOfBooks >= this.state.listOfBooks.length) {\n            newNumOfBooks = this.state.listOfBooks.length;\n            document.getElementById('loadMoreBooks1').style.display = 'none';\n            alert(\"That is all the available books!\");\n        }\n        this.setState({numOfBooks: newNumOfBooks});\n    }\n\n    close(event) {\n        event.preventDefault();\n        if (event.target.id == \"moreInfoBox1\") {\n            document.getElementById(\"moreInfoBox1\").style.display = \"none\";\n        }\n    }\n}\n\nexport default Nominations;","/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/contacts.js",["58"],"import React, {Component} from 'react';\nimport '../index.css';\nimport emailjs from 'emailjs-com';\n \nclass Contacts extends Component {\n    render () {\n        return (\n            <div className=\"container\"> \n                <section className=\"main-section alabaster\" id=\"contact\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-6\" id = \"contactInfo\">\n                            <div className=\"contact-info-box\">\n                                <h3><i class=\"fa fa-map-marker\"></i>Address:</h3>\n                                <span><a target=\"__blank\" href = \"https://www.google.com/maps/place/2140+E+116th+St,+Carmel,+IN+46032/@39.9585644,-86.1199571,17z/data=!3m1!4b1!4m5!3m4!1s0x8814ada097472ab5:0x9f4fc8c69992733e!8m2!3d39.9585603!4d-86.1177631\" >2140 E 116th St, Carmel, IN 46032</a></span>\n                            </div>\n                            <div className=\"contact-info-box\">\n                                <h3><i className=\"fa fa-phone\"></i>Phone:</h3>\n                                <span><a href = \"tel: 5554280940\">(317) 814-3900</a></span>\n                            </div>\n                            <div className=\"contact-info-box\">\n                                <h3><i className=\"fa fa-pencil\"></i>E-mail:</h3>\n                                <span><a target=\"__blank\" href=\"mailto:jbeckman@carmelclaylibrary.org\">jbeckman@carmelclaylibrary.org</a></span>\n                            </div>\n                            <div className=\"contact-info-box\">\n                                <h3><i class=\"fab fa-facebook\"></i>Facebook:</h3>\n                                <a target=\"__blank\" href=\"https://www.facebook.com/carmellib/\">Click Here</a>\n                            </div>\n                            <div className=\"contact-info-box\">\n                                <h3><i class=\"fab fa-instagram\"></i>Instagram:</h3>\n                                <a target=\"__blank\"  href=\"https://www.instagram.com/carmel_library/?hl=en\">Click Here</a>\n                            </div>\n                            <div className=\"contact-info-box\">\n                                <h3><i class=\"fab fa-twitter\"></i>Twitter:</h3>\n                                <a target=\"__blank\"  href=\"https://www.instagram.com/carmel_library/?hl=en\">Click Here</a>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-6 col-sm-5 wow fadeInUp delay-05s\" id = \"contactBox\">\n                            <div className=\"form\">\n                                <div id=\"sendmessage\">Your message has been sent. Thank you!</div>\n                                <div id=\"errormessage\"></div>\n                                <form onSubmit = {this.handleSubmit} action=\"\" method=\"post\" role=\"form\" className=\"contactForm\">\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" name=\"name\" className=\"form-control input-text\" id=\"name\" placeholder=\"Your Name\" data-rule=\"minlen:4\" data-msg=\"Please enter at least 4 chars\" />\n                                        <div className=\"validation\"></div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"email\" className=\"form-control input-text\" name=\"email\" id=\"email\" placeholder=\"Your Email\" data-rule=\"email\" data-msg=\"Please enter a valid email\" />\n                                        <div className=\"validation\"></div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control input-text\" name=\"subject\" id=\"subject\" placeholder=\"Subject\" data-rule=\"minlen:4\" data-msg=\"Please enter at least 8 chars of subject\" />\n                                        <div className=\"validation\"></div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea className=\"form-control input-text text-area\" name=\"message\" rows=\"5\" data-rule=\"required\" data-msg=\"Please write something for us\" placeholder=\"Message\"></textarea>\n                                        <div className=\"validation\"></div>\n                                    </div>\n                                    <div className=\"text-center\"><button type=\"submit\" class=\"input-btn\">Send Message</button></div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    };\n\n    handleSubmit(e) {\n        e.preventDefault();\n        emailjs.sendForm('service_1qmh2dc', 'template_yznagmp', e.target, 'user_o6t4c09ESEWOJ3hZSDIcV')\n        .then((result) => {\n            alert(\"Message Sent\");\n            e.target.reset();\n        }, (error) => {\n            alert(\"There was an error. Please try again later!\");\n        });\n    }\n}\n\nexport default Contacts;","/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/librarian.js",["59","60"],"import React, {Component} from 'react';\nimport '../index.css';\nimport Axios from \"axios\";\n\nclass Library extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            //currently manual, but can call getData and set it to lines\n            lines: [\"username: admin, password: password\",\n            \"username: guna, password: asdf\"],\n            newAccount: false,\n            content: true,\n            showImg: false,\n            path: \"\",\n            books: [],\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleNewAccount = this.handleNewAccount.bind(this);\n        this.signOut = this.signOut.bind(this);\n        this.addBook = this.addBook.bind(this);\n        this.getBooks = this.getBooks.bind(this);\n        this.loadPic = this.loadPic.bind(this);\n    }\n\n    getData() {\n        //problem with this is it is async\n        //this means that before the request is even returned, it is moving on to other parts while running this in the background\n        //moving to other parts is causing issues\n        //finding a way to make ths wait will complete this\n        //minor issue though I think\n        let tempData = Axios.get('http://localhost:3001/getLogin')\n            .then(response => { \n                return response.data;\n            })\n        return tempData;\n    }\n\n    render() {\n        const createNewAccount = (this.state.newAccount) ? this.createNewAccount(): null;\n        const content = (this.state.content) ? this.content(): null;\n        return (\n            <div>\n                <br/>\n                {this.login()}\n                <div id = \"loginContent\">\n                    {content}\n                    {createNewAccount}\n                </div>\n                \n            </div>\n        );\n    }\n\n    toggle() {\n        this.setState({newAccount: !this.state.newAccount});\n        this.setState({content: !this.state.content});\n        try {\n            document.getElementById(\"accPass\").value = \"\";\n            document.getElementById(\"newU\").value = \"\";\n            document.getElementById(\"newP\").value = \"\";\n            document.getElementById(\"confirmP\").value = \"\";\n        }\n        catch(e) {\n            \n        };\n    }\n\n    content() {\n        const image = (this.state.showImg) ? (<img src= {this.state.path} className = \"previewImg\"></img>): null;\n        const closeBtn = (this.state.showImg) ? (<button className = \"button2\" onClick = {(e) => this.closePic(e)}>Close Picture</button>): null;\n        const books = (this.state.books);        \n\n        return (\n            <div className = \"Content\">\n                <h1 className = \"header1\">Enter Book Information:</h1>\n                <form>\n                    <div className = \"col1\">\n                        <div style = {{padding: \"5vh\"}}>\n                            <div>\n                                <h3>General Info:</h3>\n                                <label>\n                                    <input className = \"addBookInputs\" type=\"text\" id = \"bTitle\" \n                                    placeholder = \"Name\" \n                                    required=\"required\"/>\n                                </label>\n                                <label>\n                                    <input className = \"addBookInputs\" type=\"text\" id = \"bAuthor\" \n                                    placeholder = \"Author\" \n                                    required=\"required\"/>\n                                </label>\n                                <label>\n                                    <input className = \"addBookInputs\" type=\"text\" id = \"fnominee\" placeholder = \"First Nominee\" required=\"required\"/>\n                                </label>\n                                <label>\n                                    <input className = \"addBookInputs\" type=\"text\" id = \"snominee\" placeholder = \"Second Nominee\" required=\"required\"/>\n                                </label>\n                                <label>\n                                    <input className = \"addBookInputs\" type=\"text\" id = \"tnominee\" placeholder = \"Third Nominee\" required=\"required\"/>\n                                </label>\n                                <label>\n                                    <input className = \"addBookInputs\" type=\"text\" id = \"becamecp\" placeholder = \"Became Choice Pick\" required=\"required\"/>\n                                </label>\n                                <label>\n                                    <input className = \"bookSummary\" type=\"textarea\" id = \"bSummary\" placeholder = \"Summary\" required=\"required\"/>\n                                </label>\n                            </div>\n                            <br/>\n                            <div>\n                                <h3>Additional Info:</h3>\n                                <p>*This information is not required, but is necessary for the website to recommend book.*</p>\n                                <table className = \"Selectors\">\n                                    <tr>\n                                        <th>\n                                            <h4>Genre</h4>\n                                        </th>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <label>Action</label>\n                                        </td>\n                                        <td> \n                                            <input type=\"checkbox\" id = \"bAdventure\"/>\n                                        </td> \n                                    </tr>\n\n                                    <tr>\n                                        <td>\n                                            <label>Adventure</label>\n                                        </td>\n                                        <td> \n                                            <input type=\"checkbox\" id = \"bAdventure\"/>\n                                        </td> \n                                    </tr>\n\n                                    <tr>\n                                        <td>\n                                            <label>Comedy</label>\n                                        </td>\n                                        <td> \n                                            <input type=\"checkbox\" id = \"bAdventure\"/>\n                                        </td> \n                                    </tr>\n\n                                    <tr>\n                                        <td>\n                                            <label>Mystery</label>\n                                        </td>\n                                        <td> \n                                            <input type=\"checkbox\" id = \"bAdventure\"/>\n                                        </td> \n                                    </tr>\n\n                                    <tr>\n                                        <td>\n                                            <label>Fantasy</label>\n                                        </td>\n                                        <td> \n                                            <input type=\"checkbox\" id = \"bAdventure\"/>\n                                        </td> \n                                    </tr>\n\n                                    <tr>\n                                        <td>\n                                            <label>Horror</label>\n                                        </td>\n                                        <td> \n                                            <input type=\"checkbox\" id = \"bAdventure\"/>\n                                        </td> \n                                    </tr>\n\n                                    <tr>\n                                        <td>\n                                            <label>Sci-Fi</label>\n                                        </td>\n                                        <td> \n                                            <input type=\"checkbox\" id = \"bAdventure\"/>\n                                        </td> \n                                    </tr>\n\n                                    <tr>\n                                        <td>\n                                            <label>Thriller</label>\n                                        </td>\n                                        <td> \n                                            <input type=\"checkbox\" id = \"bAdventure\"/>\n                                        </td> \n                                    </tr>\n\n                                    <tr>\n                                        <td>\n                                            <label>Romance</label>\n                                        </td>\n                                        <td> \n                                            <input type=\"checkbox\" id = \"bAdventure\"/>\n                                        </td> \n                                    </tr>\n\n                                </table>\n                                <table className = \"Selectors\">\n                                    <tr>\n                                        <th>\n                                            <h4>Readability</h4>\n                                        </th>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <label>Quick & Easy Read</label>\n                                        </td>\n                                        <td>\n                                            <input type=\"radio\" name = \"readability\" id = \"bAdventure\"/>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <label>Medium Read</label>\n                                        </td>\n                                        <td>\n                                            <input type=\"radio\" name = \"readability\" id = \"bAdventure\"/>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <label>Difficult Read</label>\n                                        </td>\n                                        <td>\n                                            <input type=\"radio\" name = \"readability\" id = \"bAdventure\"/>\n                                        </td>\n                                    </tr>\n                                </table>\n                                <table className = \"Selectors\">\n                                    <tr>\n                                        <th>\n                                            <h4>Other Info</h4>\n                                        </th>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <label>Fiction</label>\n                                        </td>\n                                        <td>\n                                            <input type=\"radio\" name = \"fiction\" id = \"bAdventure\"/>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <label>Non-Fiction</label>\n                                        </td>\n                                        <td>\n                                            <input type=\"radio\" name = \"fiction\" id = \"bAdventure\"/>\n                                        </td>\n                                    </tr>\n                                </table>\n                                    \n                            </div>\n                        </div>\n                    </div>\n                    <div className = \"col2\">\n                        <div style = {{padding: \"5vh\"}}>\n                            <div>\n                                <h3>Book Picture:</h3>\n                                <label>\n                                    Please provide a link a book image:\n                                    <br/>\n                                    <input placeholder = \"Book Image Link\" className = \"addBookInputs2\" type=\"text\" id = \"bImgPath\"/>\n                                </label>\n                                <button className = \"button2\" onClick = {(e) => this.loadPic(e)}>Pre-View Picture</button>\n                                {closeBtn}\n                                <br/>\n                                {image}\n                            </div>\n                        </div>\n                    </div>\n                    <button onClick = {(e) => this.addBook(e)} className = \"button\">Add Book</button>\n                    <div>\n                        <button onClick={(e) => this.getBooks(e)} className = \"button\">Show Books</button>\n                        {this.state.books.map((val, key) => {\n                        return (\n                            <div>\n                            <div>\n                                <table>\n                                    <tr>\n                                <td>Book Title: {val.bokk_title}   </td>\n                                <td>Author: {val.book_author}</td>\n                                </tr>\n                                </table>\n                            </div>\n                            </div>\n                            )})};\n                    </div>\n\n                </form>\n                <button className = \"button1\" onClick = {(e) => this.toggle(e)}>New Account</button>\n                <button className = \"button1\" onClick = {(e) => this.signOut(e)}>Sign Out</button>\n            </div>\n        );\n    }\n\n    login() {\n        return (\n            <div className = \"login1\" id = \"login\">\n                <h1 className = \"loginHeader\">Login</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <div style = {{padding: \"5vh\"}}>\n                        <label>\n                            <input type=\"text\" id = \"name\" placeholder = \"Username\" required=\"required\"/>\n                        </label>\n                        <label>\n                            <input type=\"password\" id = \"password\" placeholder = \"Password\" required=\"required\"/>\n                        </label>\n                    </div>\n                    <input className = \"submitBtn\" type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        );\n    }\n\n    createNewAccount() {\n        return (\n            <div className = \"login2\">\n                <h1 className = \"loginHeader\">Create New Account</h1>\n                <form onSubmit = {this.handleNewAccount}>\n                    <div style = {{padding: \"5vh\"}}>\n                        <label style = {{paddingBottom: \"5vh\"}}>\n                                <input type=\"password\" id = \"accPass\" placeholder = \"Account Password:\" required=\"required\"/>\n                        </label>\n                        <label>\n                                <input type=\"text\" id = \"newU\" placeholder = \"New Username\" required=\"required\"/>\n                        </label>\n                        <label>\n                                <input type=\"password\" id = \"newP\" placeholder = \"New Password\" required=\"required\"/>\n                        </label>\n                        <label>\n                                <input type=\"password\" id = \"confirmP\" placeholder = \"Confirm Password\" required=\"required\"/>\n                        </label>\n                    </div>\n                    <input type=\"submit\" value=\"Submit\" className = \"submitBtn\"/>\n                    <input type=\"button\" value=\"Return\" className = \"returnBtn\" onClick = {(e) => this.toggle(e)}/>\n                </form>\n            </div>\n        );\n    }\n\n    addBook (event) {\n        event.preventDefault();\n        let btitle = document.getElementById(\"bTitle\").value.trim();\n        let bauthor = document.getElementById(\"bAuthor\").value.trim();\n        let fnominee = document.getElementById(\"fnominee\").value.trim();\n        let snominee = document.getElementById(\"snominee\").value.trim();\n        let tnominee = document.getElementById(\"tnominee\").value.trim();\n        let becamecp = document.getElementById(\"becamecp\").value.trim();\n        \n        Axios.post('http://localhost:3001/create', {\n        btitle: btitle,\n        bauthor: bauthor,\n        fnominee: fnominee,\n        snominee: snominee,\n        tnominee: tnominee,\n        becamecp: becamecp,\n        }).then( \n            (response) => { alert('Added Successfully') },\n            (error) => { console.log(error) }\n        );\n    }\n\n    getBooks (event) {\n        event.preventDefault();              \n        Axios.get('http://localhost:3001/books')\n        .then((res)=>{\n            var data = res.data\n            this.setState({books : data})\n        })\n            \n    }\n\n\n    loadPic(event) {\n        event.preventDefault();\n        const bPath = document.getElementById(\"bImgPath\").value;\n        this.setState({showImg: true});\n        this.setState({path: bPath});\n    }\n\n    closePic(event) {\n        event.preventDefault();\n        this.setState({showImg: false});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let username = document.getElementById(\"name\").value.trim();\n        let password = document.getElementById(\"password\").value.trim();\n        let authenticated = false;\n        for (let i = 0; i < this.state.lines.length; i++) {\n            let line = this.state.lines[i];\n            const beginI = line.indexOf(\":\") + 2;\n            const endI = line.indexOf(\",\");\n            let rUsername = line.substring(beginI, endI).trim();\n            if (username === rUsername) {\n                let rPassword = this.state.lines[i].substring(endI + 12).trim();\n                if (password === rPassword) {\n                    authenticated = true;\n                    break;\n                }\n            }\n        }\n        if (authenticated) {\n            document.getElementById(\"login\").style.display = \"none\";\n            document.getElementById(\"loginContent\").style.display = \"block\";\n        }\n        else {\n            alert(\"Incorrect Credentials!\");\n            document.getElementById(\"name\").value = \"\";\n            document.getElementById(\"password\").value = \"\";\n        }\n    }\n\n    //new accounts are now properly made\n    handleNewAccount(event) {\n        //preventing reload\n        event.preventDefault()\n\n        //fetching new credentials\n        let accPass = document.getElementById(\"accPass\").value.trim();\n        let newU = document.getElementById(\"newU\").value.trim();\n        let newP = document.getElementById(\"newP\").value;\n        let confirmP = document.getElementById(\"confirmP\").value;\n\n        //checking if original password is correct\n        if (accPass === document.getElementById(\"password\").value.trim()) {\n            //checking if new username is already taken by someone else\n            let alreadyTaken = false;\n            for (let i = 0; i < this.state.lines[0].length; i++) {\n                let line = this.state.lines[0][i];\n                const beginI = line.indexOf(\":\") + 2;\n                const endI = line.indexOf(\",\");\n                let username = line.substring(beginI, endI).trim();\n                if (username === newU) {\n                    alreadyTaken = true;\n                }\n            }\n            if (!alreadyTaken) {\n                //making sure the passwords match\n                if (newP === confirmP) {\n                    let newLine = \"\\nusername: \" + newU + \", password: \" + newP;\n                    alert(newLine);\n                    //adding it to txt file\n                    Axios.post('http://localhost:3001/login', {\n                    newLine: newLine,\n                    }).then( \n                        (response) => { alert('Added Successfully') },\n                        (error) => { console.log(error) }\n                    );\n                    this.toggle();\n                }\n                else {\n                    alert(\"Passwords do not match!\");\n                    document.getElementById(\"newP\").value = \"\";\n                    document.getElementById(\"confirmP\").value = \"\";\n                }\n            }\n            else {\n                alert(\"Username already taken!\");\n                document.getElementById(\"newU\").value = \"\";\n            }\n        }\n        else {\n            alert(\"Incorrect password!\");\n            document.getElementById(\"accPass\").value = \"\";\n        }\n    }\n\n    signOut () {\n        document.getElementById(\"login\").style.display = \"block\";\n        document.getElementById(\"loginContent\").style.display = \"none\";\n        document.getElementById(\"name\").value = \"\";\n        document.getElementById(\"password\").value = \"\";\n    }\n}\n\nexport default Library;","/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/book.js",[],"/Users/nickwu/Documents/GitHub/Choice-Picks/Client/src/base/clickableView.js",["61","62"],"import React, {Component} from 'react';\nimport '../index.css';\n\nclass ClickableView extends Component {\n    render() {\n        if (this.props.book.nominated) {\n            return (\n                <div className = \"modal-content\">\n                    <span onClick = {(e) => this.close(e)} className = \"close\">&times;</span>\n                    <div id = \"picture\" className = \"col1\">\n                        <img src = {this.props.book.path} width = \"350vh\" height = \"500vh\" alt = \"Unable to Load Picture\"/>\n                    </div>\n                    <div id = \"content\" className = \"col2\">\n                        <h2><u>{this.props.book.name}</u></h2>\n                        <p>info abt books go here</p>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className = \"modal-content\">\n                    <span onClick = {(e) => this.close(e)} className = \"close\">&times;</span>\n                    <div id = \"picture\" className = \"col1\">\n                        <img src = {this.props.book.path} width = \"350vh\" height = \"500vh\" alt = \"Unable to Load Picture\"/>\n                    </div>\n                    <div id = \"content\" className = \"col2\">\n                        <h2><u>{this.props.book.name}</u></h2>\n                        <p>not nominated</p>\n                        <form>\n                            <input type = \"text\" placeholder = \"Name (First Last)\" />\n                        </form>\n                        <button className = \"button4\">Nominate!</button>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    close(event) {\n        event.preventDefault();\n        document.getElementById(\"moreInfoBox\").style.display = \"none\";\n        document.getElementById(\"moreInfoBox1\").style.display = \"none\";\n    }\n}\n\nexport default ClickableView;",{"ruleId":"63","severity":1,"message":"64","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":21},{"ruleId":"63","severity":1,"message":"67","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":19},{"ruleId":"68","severity":1,"message":"69","line":125,"column":84,"nodeType":"70","messageId":"71","endLine":125,"endColumn":86},{"ruleId":"68","severity":1,"message":"72","line":131,"column":111,"nodeType":"70","messageId":"73","endLine":131,"endColumn":113},{"ruleId":"74","severity":1,"message":"75","line":165,"column":29,"nodeType":"76","messageId":"77","endLine":165,"endColumn":31},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"68","severity":1,"message":"69","line":47,"column":84,"nodeType":"70","messageId":"71","endLine":47,"endColumn":86},{"ruleId":"68","severity":1,"message":"72","line":53,"column":111,"nodeType":"70","messageId":"73","endLine":53,"endColumn":113},{"ruleId":"74","severity":1,"message":"75","line":87,"column":29,"nodeType":"76","messageId":"77","endLine":87,"endColumn":31},{"ruleId":"82","severity":1,"message":"83","line":41,"column":33,"nodeType":"84","endLine":41,"endColumn":130},{"ruleId":"85","severity":1,"message":"86","line":70,"column":47,"nodeType":"84","endLine":70,"endColumn":100},{"ruleId":"63","severity":1,"message":"87","line":72,"column":15,"nodeType":"65","messageId":"66","endLine":72,"endColumn":20},{"ruleId":"88","severity":1,"message":"89","line":11,"column":25,"nodeType":"84","endLine":11,"endColumn":124},{"ruleId":"88","severity":1,"message":"89","line":25,"column":25,"nodeType":"84","endLine":25,"endColumn":124},"no-unused-vars","'ClickableView' is defined but never used.","Identifier","unusedVar","'Collapsible' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'books' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]