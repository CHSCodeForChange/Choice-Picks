[{"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\index.js":"1","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\choicePicks.js":"2","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\reportWebVitals.js":"3","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\librarian.js":"4","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\recommendations.js":"5","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\home.js":"6","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\footer.js":"7","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\book.js":"8","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\clickableView.js":"9","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\nominations.js":"10"},{"size":1095,"mtime":1614123815687,"results":"11","hashOfConfig":"12"},{"size":2177,"mtime":1614123815684,"results":"13","hashOfConfig":"12"},{"size":413,"mtime":1614123815687,"results":"14","hashOfConfig":"12"},{"size":6113,"mtime":1614545749485,"results":"15","hashOfConfig":"12"},{"size":3398,"mtime":1614123815686,"results":"16","hashOfConfig":"12"},{"size":157,"mtime":1614036801079,"results":"17","hashOfConfig":"12"},{"size":162,"mtime":1614123815684,"results":"18","hashOfConfig":"12"},{"size":385,"mtime":1614123815683,"results":"19","hashOfConfig":"12"},{"size":477,"mtime":1614123815684,"results":"20","hashOfConfig":"12"},{"size":282,"mtime":1614124109291,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"r77ugs",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\index.js",["48"],"//default\r\nimport React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n//customized imports\r\nimport './index.css';\r\nimport Footer from './base/footer';\r\nimport ChoicePicks from './base/choicePicks';\r\nimport Recommendations from './base/recommendations';\r\nimport Library from './base/librarian';\r\nimport Nominations from './base/nominations';\r\n\r\nReactDOM.render( \r\n  <React.StrictMode>\r\n    <ChoicePicks />\r\n  </React.StrictMode>,\r\n  document.getElementById('choicePicks')\r\n);\r\n\r\nReactDOM.render( \r\n  <React.StrictMode>\r\n    <Recommendations />\r\n  </React.StrictMode>,\r\n  document.getElementById('recommendations')\r\n);\r\n\r\nReactDOM.render( \r\n  <React.StrictMode>\r\n    <Library />\r\n  </React.StrictMode>,\r\n  document.getElementById('librarian')\r\n);\r\n\r\nReactDOM.render( \r\n  <React.StrictMode>\r\n    <Nominations />\r\n  </React.StrictMode>,\r\n  document.getElementById('nominations')\r\n);\r\n\r\nReactDOM.render( \r\n  <React.StrictMode>\r\n    <Footer />\r\n  </React.StrictMode>,\r\n  document.getElementById('footer')\r\n);\r\n\r\nreportWebVitals();\r\n",["49","50"],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\choicePicks.js",[],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\reportWebVitals.js",[],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\librarian.js",["51","52","53"],"import React, {Component} from 'react';\r\nimport '../index.css';\r\nimport raw from './credentials.txt';\r\n\r\nclass Library extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        let lines = []\r\n        fetch(raw)\r\n            .then(r => r.text())\r\n                .then(text => {\r\n                    lines.push(text.split(\"\\n\"));\r\n        });\r\n        this.state = {\r\n            lines,\r\n            newAccount: false,\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    render() {\r\n        const createNewAccount = (this.state.newAccount) ? this.createNewAccount(): null;\r\n        return (\r\n            <div>\r\n                {this.login()}\r\n                <div id = \"loginContent\">\r\n                    <button onClick = {(e) => this.toggle(e)}>New Account</button>\r\n                    {createNewAccount}\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({newAccount: !this.state.newAccount});\r\n    }\r\n\r\n    login() {\r\n        return (\r\n            <div id = \"login\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                            Username: \r\n                            <input type=\"text\" id = \"name\" />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                            Password: \r\n                            <input type=\"text\" id = \"password\" />\r\n                    </label>\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        let username = document.getElementById(\"name\").value.trim();\r\n        let password = document.getElementById(\"password\").value.trim();\r\n        let authenticated = false;\r\n        for (let i = 0; i < this.state.lines[0].length; i++) {\r\n            let line = this.state.lines[0][i];\r\n            const beginI = line.indexOf(\":\") + 2;\r\n            const endI = line.indexOf(\",\");\r\n            let rUsername = line.substring(beginI, endI).trim();\r\n            console.log(rUsername);\r\n            if (username == rUsername) {\r\n                let rPassword = this.state.lines[0][i].substring(endI + 12).trim();\r\n                if (password == rPassword) {\r\n                    authenticated = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (authenticated) {\r\n            document.getElementById(\"login\").style.display = \"none\";\r\n            document.getElementById(\"loginContent\").style.display = \"block\";\r\n        }\r\n        else {\r\n            alert(\"Incorrect Credentials!\");\r\n            document.getElementById(\"name\").value = \"\";\r\n            document.getElementById(\"password\").value = \"\";\r\n        }\r\n    }\r\n\r\n    createNewAccount() {\r\n        return (\r\n            <div>\r\n                <form onSubmit = {this.handleNewAccount}>\r\n                    <label>\r\n                            Account Password: \r\n                            <input type=\"text\" id = \"accPass\" />\r\n                    </label>\r\n                    <label>\r\n                            New Account Username: \r\n                            <input type=\"text\" id = \"newU\" />\r\n                    </label>\r\n                    <label>\r\n                            New Account Password: \r\n                            <input type=\"text\" id = \"newP\" />\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleNewAccount(event) {\r\n        event.preventDefault()\r\n        let accPass = document.getElementById(\"accPass\").value;\r\n        if (accPass == document.getElementById(\"password\").value) {\r\n            let newU = document.getElementById(\"newU\").value;\r\n            let newP = document.getElementById(\"newP\").value;\r\n            let newLine = \"username: \" + newU + \", password: \" + newP;\r\n            // localStorage.setItem('1', newLine);\r\n            // console.log(localStorage.getItem('1') + \"local storage\");\r\n            // this.state.lines[0].add(newLine);\r\n            // const fs = require('fs');\r\n            // fs.appendFile('./credentials.txt', '\\nRight there up on Broadway', (err) => {\r\n            //     if (err) throw err;\r\n            //     console.log('The lyrics were updated!');\r\n            // });\r\n            \r\n            // using(StreamWrite sw = new StreamWriter(\"file.txt\"))\r\n            // credential.txt\r\n            window.updateFile(newLine);\r\n        }\r\n        else {\r\n            alert(\"Incorrect password!\");\r\n        }\r\n    }\r\n}\r\n\r\nexport default Library;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import '../index.css';\r\n\r\n// export default function Library() {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n\r\n//   function validateForm() {\r\n//     return email.length > 0 && password.length > 0;\r\n//   }\r\n\r\n//   function handleSubmit(event) {\r\n//     event.preventDefault();\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"Login\">\r\n//       <Form onSubmit={handleSubmit}>\r\n//         <Form.Group size=\"lg\" controlId=\"email\">\r\n//           <Form.Label>Email</Form.Label>\r\n//           <Form.Control\r\n//             autoFocus\r\n//             type=\"email\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n//         <Form.Group size=\"lg\" controlId=\"password\">\r\n//           <Form.Label>Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n//         <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n//           Login\r\n//         </Button>\r\n//       </Form>\r\n//     </div>\r\n//   );\r\n// }","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\recommendations.js",["54","55"],"import React, {Component} from 'react';\r\nimport Book from './book';\r\nimport '../index.css';\r\nimport ClickableView from './clickableView';\r\n\r\nclass Recommendations extends Component{\r\n    state = {\r\n        listOfBooks: [\r\n            /* the path is the file name if the image is in the public folder */\r\n            {name: \"Dairy of a Wimpy Kid\", path: \"wimpyKid.jpg\"},\r\n            {name: \"Scythe\", path: \"scytheBook.jpg\"},\r\n            {name: \"Harry Potter\", path: \"harryPotter.jpg\"},\r\n            {name: \"How to Code\", path: \"howToCodeBook.jpeg\"},\r\n            {name: \"Hunger Games\", path: \"hungerGames.jpg\"},\r\n        ],\r\n        currentBookPath: \"wimpyKid.jpg\",\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className = \"sidenav\">\r\n                    {this.sideBar()}\r\n                </div>\r\n                <div className = \"mainbar\">\r\n                    {this.renderBooks()}\r\n                </div>\r\n                <div id = \"moreInfoBox\" className = \"moreInfoBox\">\r\n                    <div className =\"content\">\r\n                        <span onClick = {() => this.close()} className = \"close\">&times;</span>\r\n                        <div id = \"bookInfo\">\r\n                            <div id = \"picture\">\r\n                                <img src = {this.state.currentBookPath} width = \"250\" height = \"400\"/>\r\n                            </div>\r\n                            <div id = \"content\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    sideBar() {\r\n        return (\r\n            <div>\r\n                <ol>\r\n                    <li>Genre:</li>\r\n                    <form>\r\n                        <input type=\"radio\" id=\"button1\" name=\"genre\"/>\r\n                        <label for=\"button1\">Fiction</label><br />\r\n                        <input type=\"radio\" id=\"button2\" name=\"genre\"/>\r\n                        <label for=\"button2\">Comedy</label><br />\r\n                        <input type=\"radio\" id=\"button3\" name=\"genre\"/>\r\n                        <label for=\"button3\">Adventure</label>\r\n                    </form> \r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderBooks() {\r\n        return (\r\n            <div>\r\n                {this.state.listOfBooks.map((book, index) => {\r\n                    return (\r\n                        <div className = \"book\" key = {index}>\r\n                            <Book name = {book.name} path = {book.path}/>\r\n                            <br />\r\n                            <button id=\"myBtn\" onClick = {() => this.moreInfo(book)}>More Information</button>\r\n                            <br />\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    moreInfo(book) {\r\n        document.getElementById(\"moreInfoBox\").style.display = \"block\";\r\n        this.setState({currentBookPath: book.path});\r\n        const content = this.toString(book);\r\n        document.getElementById('content').innerHTML = content;\r\n    }\r\n    \r\n    close() {\r\n        document.getElementById(\"moreInfoBox\").style.display = \"none\";\r\n    }\r\n\r\n    toString(book) {\r\n        let string = \"Book name: \" + book.name;\r\n        //add other information here\r\n        return string;\r\n    }\r\n}\r\n\r\nexport default Recommendations;","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\home.js",[],["56","57"],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\footer.js",[],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\book.js",[],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\clickableView.js",[],["58","59"],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\nominations.js",[],{"ruleId":"60","severity":1,"message":"61","line":2,"column":16,"nodeType":"62","messageId":"63","endLine":2,"endColumn":25},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":70,"column":26,"nodeType":"70","messageId":"71","endLine":70,"endColumn":28},{"ruleId":"68","severity":1,"message":"69","line":72,"column":30,"nodeType":"70","messageId":"71","endLine":72,"endColumn":32},{"ruleId":"68","severity":1,"message":"69","line":114,"column":21,"nodeType":"70","messageId":"71","endLine":114,"endColumn":23},{"ruleId":"60","severity":1,"message":"72","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":21},{"ruleId":"73","severity":1,"message":"74","line":33,"column":33,"nodeType":"75","endLine":33,"endColumn":103},{"ruleId":"64","replacedBy":"76"},{"ruleId":"66","replacedBy":"77"},{"ruleId":"64","replacedBy":"78"},{"ruleId":"66","replacedBy":"79"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ClickableView' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["80"],["81"],["80"],["81"],"no-global-assign","no-unsafe-negation"]