[{"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\index.js":"1","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\reportWebVitals.js":"2","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\nominations.js":"3","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\librarian.js":"4","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\footer.js":"5","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\contacts.js":"6","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\choicePicks.js":"7","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\recommendations.js":"8","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\book.js":"9","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\clickableView.js":"10"},{"size":1251,"mtime":1615333309431,"results":"11","hashOfConfig":"12"},{"size":413,"mtime":1614123815687,"results":"13","hashOfConfig":"12"},{"size":295,"mtime":1615770828934,"results":"14","hashOfConfig":"12"},{"size":15137,"mtime":1615770828933,"results":"15","hashOfConfig":"12"},{"size":1238,"mtime":1615343247417,"results":"16","hashOfConfig":"12"},{"size":5184,"mtime":1615481196872,"results":"17","hashOfConfig":"12"},{"size":1477,"mtime":1615336313015,"results":"18","hashOfConfig":"12"},{"size":8900,"mtime":1615821916149,"results":"19","hashOfConfig":"12"},{"size":416,"mtime":1615773123272,"results":"20","hashOfConfig":"12"},{"size":850,"mtime":1615771328581,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"r77ugs",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\index.js",[],["46","47"],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\reportWebVitals.js",[],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\nominations.js",[],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\librarian.js",["48","49"],"import React, {Component} from 'react';\r\nimport '../index.css';\r\nimport raw from './credentials.txt';\r\n\r\nclass Library extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        let lines = []\r\n        fetch(raw)\r\n            .then(r => r.text())\r\n                .then(text => {\r\n                    lines.push(text.split(\"\\n\"));\r\n        });\r\n        this.state = {\r\n            lines,\r\n            newAccount: false,\r\n            content: true,\r\n            showImg: false,\r\n            path: \"\",\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleNewAccount = this.handleNewAccount.bind(this);\r\n        this.signOut = this.signOut.bind(this);\r\n        this.addBook = this.addBook.bind(this);\r\n        this.loadPic = this.loadPic.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const createNewAccount = (this.state.newAccount) ? this.createNewAccount(): null;\r\n        const content = (this.state.content) ? this.content(): null;\r\n        return (\r\n            <div>\r\n                <br/>\r\n                {this.login()}\r\n                <div id = \"loginContent\">\r\n                    {content}\r\n                    {createNewAccount}\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({newAccount: !this.state.newAccount});\r\n        this.setState({content: !this.state.content});\r\n        try {\r\n            document.getElementById(\"accPass\").value = \"\";\r\n            document.getElementById(\"newU\").value = \"\";\r\n            document.getElementById(\"newP\").value = \"\";\r\n            document.getElementById(\"confirmP\").value = \"\";\r\n        }\r\n        catch(e) {\r\n            \r\n        };\r\n    }\r\n\r\n    content() {\r\n        const image = (this.state.showImg) ? (<img src= {this.state.path} className = \"previewImg\"></img>): null;\r\n        const closeBtn = (this.state.showImg) ? (<button className = \"button2\" onClick = {(e) => this.closePic(e)}>Close Picture</button>): null;\r\n        return (\r\n            <div className = \"Content\">\r\n                <h1 className = \"header1\">Enter Book Information:</h1>\r\n                <form>\r\n                    <div className = \"col1\">\r\n                        <div style = {{padding: \"5vh\"}}>\r\n                            <div>\r\n                                <h3>General Info:</h3>\r\n                                <label>\r\n                                    <input className = \"addBookInputs\" type=\"text\" id = \"bName\" placeholder = \"Name\" required=\"required\"/>\r\n                                </label>\r\n                                <label>\r\n                                    <input className = \"addBookInputs\" type=\"text\" id = \"bAuthor\" placeholder = \"Author\" required=\"required\"/>\r\n                                </label>\r\n                                <label>\r\n                                    <input className = \"addBookInputs\" type=\"text\" id = \"bPublisher\" placeholder = \"Publisher\" required=\"required\"/>\r\n                                </label>\r\n                                <label>\r\n                                    <input className = \"addBookInputs\" type=\"text\" id = \"bDate\" placeholder = \"Published Date\" required=\"required\"/>\r\n                                </label>\r\n                                <label>\r\n                                    <input className = \"bookSummary\" type=\"textarea\" id = \"bSummary\" placeholder = \"Summary\" required=\"required\"/>\r\n                                </label>\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <h3>Additional Info:</h3>\r\n                                <p>*This information is not required, but is necessary for the website to recommend book.*</p>\r\n                                <h4>Genre</h4>\r\n                                <div>\r\n                                    <label>\r\n                                        Action:   \r\n                                        <input type=\"checkbox\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                    <label>\r\n                                        Adventure:\r\n                                        <input type=\"checkbox\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                    <label>\r\n                                        Comedy:   \r\n                                        <input type=\"checkbox\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                    <label>\r\n                                        Mystery:  \r\n                                        <input type=\"checkbox\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                    <label>\r\n                                        Fantasy:  \r\n                                        <input type=\"checkbox\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                    <label>\r\n                                        Horror:   \r\n                                        <input type=\"checkbox\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                    <label>\r\n                                        Sci-Fi:   \r\n                                        <input type=\"checkbox\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                    <label>\r\n                                        Thriller: \r\n                                        <input type=\"checkbox\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                    <label>\r\n                                        Romance:  \r\n                                        <input type=\"checkbox\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                </div>\r\n                                <h4>Readability</h4>\r\n                                <div>\r\n                                    <label>\r\n                                        Quick & Easy Read:\r\n                                        <input type=\"radio\" name = \"readability\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                    <label>\r\n                                        Medium Read:\r\n                                        <input type=\"radio\" name = \"readability\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                    <label>\r\n                                        Difficult Read:\r\n                                        <input type=\"radio\" name = \"readability\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                </div>\r\n                                <h4>Other Info</h4>\r\n                                <div>\r\n                                    <label>\r\n                                        Fiction:\r\n                                        <input type=\"radio\" name = \"fiction\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                    <label>\r\n                                        Non-Fiction:\r\n                                        <input type=\"radio\" name = \"fiction\" id = \"bAdventure\"/>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"col2\">\r\n                        <div style = {{padding: \"5vh\"}}>\r\n                            <div>\r\n                                <h3>Book Picture:</h3>\r\n                                <label>\r\n                                    Please provide a link a book image:\r\n                                    <br/>\r\n                                    <input placeholder = \"Book Image Link\" className = \"addBookInputs2\" type=\"text\" id = \"bImgPath\"/>\r\n                                </label>\r\n                                <button className = \"button2\" onClick = {(e) => this.loadPic(e)}>Pre-View Picture</button>\r\n                                {closeBtn}\r\n                                <br/>\r\n                                {image}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button onClick = {(e) => this.addBook(e)} className = \"button\">Add Book</button>\r\n                </form>\r\n                <button className = \"button1\" onClick = {(e) => this.toggle(e)}>New Account</button>\r\n                <button className = \"button1\" onClick = {(e) => this.signOut(e)}>Sign Out</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    login() {\r\n        return (\r\n            <div className = \"login1\" id = \"login\">\r\n                <h1 className = \"loginHeader\">Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div style = {{padding: \"5vh\"}}>\r\n                        <label>\r\n                            <input type=\"text\" id = \"name\" placeholder = \"Username\" required=\"required\"/>\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"password\" id = \"password\" placeholder = \"Password\" required=\"required\"/>\r\n                        </label>\r\n                    </div>\r\n                    <input className = \"submitBtn\" type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    createNewAccount() {\r\n        return (\r\n            <div className = \"login2\">\r\n                <h1 className = \"loginHeader\">Create New Account</h1>\r\n                <form onSubmit = {this.handleNewAccount}>\r\n                    <div style = {{padding: \"5vh\"}}>\r\n                        <label style = {{paddingBottom: \"5vh\"}}>\r\n                                <input type=\"password\" id = \"accPass\" placeholder = \"Account Password:\" required=\"required\"/>\r\n                        </label>\r\n                        <label>\r\n                                <input type=\"text\" id = \"newU\" placeholder = \"New Username\" required=\"required\"/>\r\n                        </label>\r\n                        <label>\r\n                                <input type=\"password\" id = \"newP\" placeholder = \"New Password\" required=\"required\"/>\r\n                        </label>\r\n                        <label>\r\n                                <input type=\"password\" id = \"confirmP\" placeholder = \"Confirm Password\" required=\"required\"/>\r\n                        </label>\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Submit\" className = \"submitBtn\"/>\r\n                    <input type=\"button\" value=\"Return\" className = \"returnBtn\" onClick = {(e) => this.toggle(e)}/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addBook (event) {\r\n        event.preventDefault();\r\n        alert('This is still under testing.');\r\n    }\r\n\r\n    loadPic(event) {\r\n        event.preventDefault();\r\n        const bPath = document.getElementById(\"bImgPath\").value;\r\n        this.setState({showImg: true});\r\n        this.setState({path: bPath});\r\n    }\r\n\r\n    closePic(event) {\r\n        event.preventDefault();\r\n        this.setState({showImg: false});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        let username = document.getElementById(\"name\").value.trim();\r\n        let password = document.getElementById(\"password\").value.trim();\r\n        let authenticated = false;\r\n        for (let i = 0; i < this.state.lines[0].length; i++) {\r\n            let line = this.state.lines[0][i];\r\n            const beginI = line.indexOf(\":\") + 2;\r\n            const endI = line.indexOf(\",\");\r\n            let rUsername = line.substring(beginI, endI).trim();\r\n            if (username === rUsername) {\r\n                let rPassword = this.state.lines[0][i].substring(endI + 12).trim();\r\n                if (password === rPassword) {\r\n                    authenticated = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (authenticated) {\r\n            document.getElementById(\"login\").style.display = \"none\";\r\n            document.getElementById(\"loginContent\").style.display = \"block\";\r\n        }\r\n        else {\r\n            alert(\"Incorrect Credentials!\");\r\n            document.getElementById(\"name\").value = \"\";\r\n            document.getElementById(\"password\").value = \"\";\r\n        }\r\n    }\r\n\r\n    handleNewAccount(event) {\r\n        event.preventDefault()\r\n        let accPass = document.getElementById(\"accPass\").value;\r\n        if (accPass === document.getElementById(\"password\").value) {\r\n            let newU = document.getElementById(\"newU\").value;\r\n            let alreadyTaken = false;\r\n            for (let i = 0; i < this.state.lines[0].length; i++) {\r\n                let line = this.state.lines[0][i];\r\n                const beginI = line.indexOf(\":\") + 2;\r\n                const endI = line.indexOf(\",\");\r\n                let username = line.substring(beginI, endI).trim();\r\n                if (username === newU) {\r\n                    alreadyTaken = true;\r\n                }\r\n            }\r\n            if (!alreadyTaken) {\r\n                let newP = document.getElementById(\"newP\").value;\r\n                let confirmP = document.getElementById(\"confirmP\").value;\r\n                if (newP === confirmP) {\r\n                    let newLine = \"username: \" + newU + \", password: \" + newP;\r\n                    // localStorage.setItem('1', newLine);\r\n                    // console.log(localStorage.getItem('1') + \"local storage\");\r\n                    // this.state.lines[0].add(newLine);\r\n                    // const fs = require('fs');\r\n                    // fs.appendFile('./credentials.txt', '\\nRight there up on Broadway', (err) => {\r\n                    //     if (err) throw err;\r\n                    //     console.log('The lyrics were updated!');\r\n                    // });\r\n                    // using(StreamWrite sw = new StreamWriter(\"file.txt\"))\r\n                    // credential.txt\r\n                    // window.updateFile(newLine);\r\n                    this.toggle();\r\n                }\r\n                else {\r\n                    alert(\"Passwords do not match!\");\r\n                    document.getElementById(\"newP\").value = \"\";\r\n                    document.getElementById(\"confirmP\").value = \"\";\r\n                }\r\n            }\r\n            else {\r\n                alert(\"Username already taken!\");\r\n                document.getElementById(\"newU\").value = \"\";\r\n            }\r\n        }\r\n        else {\r\n            alert(\"Incorrect password!\");\r\n            document.getElementById(\"accPass\").value = \"\";\r\n        }\r\n    }\r\n\r\n    signOut () {\r\n        document.getElementById(\"login\").style.display = \"block\";\r\n        document.getElementById(\"loginContent\").style.display = \"none\";\r\n        document.getElementById(\"name\").value = \"\";\r\n        document.getElementById(\"password\").value = \"\";\r\n    }\r\n}\r\n\r\nexport default Library;","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\footer.js",[],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\contacts.js",["50"],"import React, {Component} from 'react';\r\nimport '../index.css';\r\nimport emailjs from 'emailjs-com';\r\n\r\nclass Contacts extends Component {\r\n    render () {\r\n        return (\r\n            <div className=\"container\"> \r\n                <section className=\"main-section alabaster\" id=\"contact\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6 col-sm-7\">\r\n                            <div className=\"contact-info-box\">\r\n                                <h3><i class=\"fas fa-map-marker\"></i>Address:</h3>\r\n                                <span><a target=\"__blank\" href = \"https://www.google.com/maps/place/2140+E+116th+St,+Carmel,+IN+46032/@39.9585644,-86.1199571,17z/data=!3m1!4b1!4m5!3m4!1s0x8814ada097472ab5:0x9f4fc8c69992733e!8m2!3d39.9585603!4d-86.1177631\" >2140 E 116th St, Carmel, IN 46032</a></span>\r\n                            </div>\r\n                            <div className=\"contact-info-box\">\r\n                                <h3><i className=\"fas fa-phone\"></i>Phone:</h3>\r\n                                <span><a href = \"tel: 5554280940\">(317) 814-3900</a></span>\r\n                            </div>\r\n                            <div className=\"contact-info-box\">\r\n                                <h3><i className=\"fa fa-pencil\"></i>E-mail:</h3>\r\n                                <span><a target=\"__blank\" href=\"mailto:jbeckman@carmelclaylibrary.org\">jbeckman@carmelclaylibrary.org</a></span>\r\n                            </div>\r\n                            <div className=\"contact-info-box\">\r\n                                <h3><i class=\"fab fa-facebook\"></i>Facebook:</h3>\r\n                                <a target=\"__blank\" href=\"https://www.facebook.com/carmellib/\">Click Here</a>\r\n                            </div>\r\n                            <div className=\"contact-info-box\">\r\n                                <h3><i class=\"fab fa-instagram\"></i>Instagram:</h3>\r\n                                <a target=\"__blank\"  href=\"https://www.instagram.com/carmel_library/?hl=en\">Click Here</a>\r\n                            </div>\r\n                            <div className=\"contact-info-box\">\r\n                                <h3><i class=\"fab fa-twitter\"></i>Twitter:</h3>\r\n                                <a target=\"__blank\"  href=\"https://www.instagram.com/carmel_library/?hl=en\">Click Here</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-sm-5 wow fadeInUp delay-05s\">\r\n                            <div className=\"form\">\r\n                                <div id=\"sendmessage\">Your message has been sent. Thank you!</div>\r\n                                <div id=\"errormessage\"></div>\r\n                                <form onSubmit = {this.handleSubmit} action=\"\" method=\"post\" role=\"form\" className=\"contactForm\">\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" name=\"name\" className=\"form-control input-text\" id=\"name\" placeholder=\"Your Name\" data-rule=\"minlen:4\" data-msg=\"Please enter at least 4 chars\" />\r\n                                        <div className=\"validation\"></div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"email\" className=\"form-control input-text\" name=\"email\" id=\"email\" placeholder=\"Your Email\" data-rule=\"email\" data-msg=\"Please enter a valid email\" />\r\n                                        <div className=\"validation\"></div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className=\"form-control input-text\" name=\"subject\" id=\"subject\" placeholder=\"Subject\" data-rule=\"minlen:4\" data-msg=\"Please enter at least 8 chars of subject\" />\r\n                                        <div className=\"validation\"></div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea className=\"form-control input-text text-area\" name=\"message\" rows=\"5\" data-rule=\"required\" data-msg=\"Please write something for us\" placeholder=\"Message\"></textarea>\r\n                                        <div className=\"validation\"></div>\r\n                                    </div>\r\n                                    <div className=\"text-center\"><button type=\"submit\" class=\"input-btn\">Send Message</button></div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        emailjs.sendForm('service_1qmh2dc', 'template_yznagmp', e.target, 'user_o6t4c09ESEWOJ3hZSDIcV')\r\n        .then((result) => {\r\n            alert(\"Message Sent\");\r\n            e.target.reset();\r\n        }, (error) => {\r\n            alert(\"There was an error. Please try again later!\");\r\n        });\r\n    }\r\n}\r\n\r\nexport default Contacts;","C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\choicePicks.js",[],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\recommendations.js",["51"],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\book.js",[],"C:\\Users\\gunav\\Desktop\\Code\\Code For Change\\Choice-Picks\\src\\base\\clickableView.js",["52"],"import React, {Component} from 'react';\r\nimport '../index.css';\r\n\r\nclass ClickableView extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"modal-content\">\r\n                <span onClick = {(e) => this.close(e)} className = \"close\">&times;</span>\r\n                <div id = \"picture\" className = \"col1\">\r\n                    <img src = {this.props.book.path} width = \"350vh\" height = \"500vh\"/>\r\n                </div>\r\n                <div id = \"content\" className = \"col2\">\r\n                    <h3><u>{this.props.book.name}</u></h3>\r\n                    <p>info abt books go here</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    close(event) {\r\n        event.preventDefault();\r\n        document.getElementById(\"moreInfoBox\").style.display = \"none\";\r\n    }\r\n}\r\n\r\nexport default ClickableView;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":59,"column":47,"nodeType":"59","endLine":59,"endColumn":100},{"ruleId":"60","severity":1,"message":"61","line":291,"column":25,"nodeType":"62","messageId":"63","endLine":291,"endColumn":32},{"ruleId":"64","severity":1,"message":"65","line":41,"column":33,"nodeType":"59","endLine":41,"endColumn":130},{"ruleId":"66","severity":1,"message":"67","line":166,"column":29,"nodeType":"68","messageId":"69","endLine":166,"endColumn":31},{"ruleId":"57","severity":1,"message":"58","line":10,"column":21,"nodeType":"59","endLine":10,"endColumn":89},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'newLine' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]